#! /bin/bash
#
# Copyright 2009 Yorba Foundation
# modified Jeremy Wootten 2010. 
#
# This software is licensed under the GNU LGPL (version 2.1 or later).
# See the COPYING file in this distribution. 

CONFIG_IN=configure.mk

configure_help() {
    printf "\nUsage:\n"
    printf "\t./configure [OPTIONS]...\n"
    printf "\n"
    printf "Options:\n"
    printf "\t-h, --help\t\tPrint this help and exit.\n"
    printf "\t--assume-pkgs\t\tTurn off package version checking.\n"
    printf "\t--build=DIR\t\tBuild secondary files in DIR.\n"
    printf "\t--debug | --release\tBuild executable for debugging or release.\n"
    printf "\t\t\t\t[--release]\n"
    printf "\t--prefix=PREFIX\t\tPrepend PREFIX to program installation paths.\n"
    printf "\t\t\t\t[/usr/local]\n"
    printf "\t--define=SYMBOL\t\tDefine a symbol for the Vala compiler.\n"
#    printf "\t--with-GConf-schema-file-dir=DIR\n"
#    printf "\t\t\t\tDirectory for installing schema files.\n"
#    printf "\t--disable-schemas-install\n"
#   printf "\t\t\t\tDisable the schemas installation.\n"
#    printf "\t--disable-desktop-update\n"
#    printf "\t\t\t\tDisable desktop database update.\n"
    printf "\t--disable-icon-update\n"
    printf "\t\t\t\tDisable icon cache update.\n"
    printf "\n"
}

abort() {
    printf "%s: Invalid argument %s\n" $0 $1
    configure_help
    exit 1
}

while [ $# != 0 ]
do
    option=`echo $1 | sed 's/=.*//'`
    if [ `echo $1 | grep '='` ]
    then
        value=`echo $1 | sed 's/.*=//'`
    fi

    case $option in
        -h | --help)        configure_help
                            exit 0
                            ;;
        
        --prefix)           if [ ! $value ]
                            then
                                abort $1
                            fi
                            
                            variables="${variables}PREFIX=$value\n"
                            ;;
        
        --assume-pkgs)      variables="${variables}ASSUME_PKGS=1\n"
                            ;;
        
        --build)            if [ ! $value ]
                            then
                                abort $1
                            fi
                            
                            variables="${variables}BUILD_DIR=$value\n"
                            ;;
        
        --debug)            variables="${variables}BUILD_RELEASE=\nBUILD_DEBUG=1\n"
                            ;;
        
        --release)          variables="${variables}BUILD_DEBUG=\nBUILD_RELEASE=1\n"
                            ;;
        
        --define)           variables="${variables}USER_VALAFLAGS+=--define=$value\n"
                            ;;

		  --novala)				 variables="${variables}NO_VALA=1\n"
									 ;;
									 
#        --with-GConf-schema-file-dir)     if [ ! $value ]
#                                          then
#                                              abort $1
#                                          fi
#                                           
#                                          variables="${variables}SCHEMA_FILE_DIR=$value\n"
#                                          ;;
#
#        --disable-schemas-install)        variables="${variables}DISABLE_SCHEMAS_INSTALL=1\n"
#                                          ;;
#
#        --disable-desktop-update)         variables="${variables}DISABLE_DESKTOP_UPDATE=1\n"
#                                          ;;
#
#        --disable-icon-update)            variables="${variables}DISABLE_ICON_UPDATE=1\n"
#                                          ;;

        *)                  if [ ! $value ]
                            then
                                abort $1
                            fi
                            
                            variables="${variables}${option}=${value}\n"
                            ;;
    esac
    
    shift
done

rm -f $CONFIG_IN
if [ $variables ]
then
    echo -e -n $variables > $CONFIG_IN
fi
echo "CONFIG_IN=${CONFIG_IN}" >> $CONFIG_IN

printf "Configured.  Type 'make' to build, 'make install' to install.\n"
